{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/abstracts.js","src/js/components/background.js","src/js/components/birds.js","src/js/components/orbit.js","src/js/components/particles.js","src/js/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","\r\nconst abstracts = {\r\n\r\n    backgroundcolor: 0xfefefe,\r\n    accentColor: 0x5588ff,\r\n    skyColor: 0x87CEFA,\r\n    groudColor: 0x3CB371,\r\n\r\n    themeMonoColor1: 0xF6FAFB,\r\n    themeMonoColor2: 0xC3CACD,\r\n    themeMonoColor3: 0x97A1A4,\r\n    themeMonoColor4: 0x717C80,\r\n    themeMonoColor5: 0x49565A,\r\n    themeMonoColor6: 0x1F282C,\r\n\r\n    particles: {\r\n        FLOOR_LEVEL: -10\r\n    }\r\n}\r\n\r\nmodule.exports = abstracts;","const abstracts = require('../abstracts');\r\nconst Orbit = require('./orbit');\r\nconst Particles = require('./particles');\r\n\r\n// Constents\r\n\r\nconst sceneEl = document.getElementById('scene');\r\nconst cameraRadius = 5;\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize( window.innerWidth, window.innerHeight );\r\nscene.fog = new THREE.Fog( abstracts.skyColor, 90, 330 );\r\nrenderer.setClearColor( abstracts.skyColor );\r\n// Setup\r\n\r\nlet particles = new Particles(scene);\r\n\r\n// Used in init\r\nlet clock;\r\n\r\n// Used in initParticles\r\nlet floorGroup;\r\n\r\n// Default Vectors\r\n// Position based on field\r\nlet posMiddle = new THREE.Vector3(500, 0, 500);\r\nlet posShort = new THREE.Vector3(10, 0, 10);\r\n// Rotation\r\n// Objects\r\n// Floor Texture\r\n\r\n// Init\r\nfunction init() {\r\n    clock = new THREE.Clock();\r\n}\r\n\r\n\r\n\r\n\r\n// Floor\r\nlet floorG = new THREE.BoxGeometry( 1000, 0.001, 1000 );\r\nlet floorM = new THREE.MeshStandardMaterial( { \r\n    color: abstracts.themeMonoColor1,\r\n    side: THREE.DoubleSide\r\n});\r\n\r\nlet floorMesh = new THREE.Mesh( floorG, floorM );\r\n//floorMesh.rotateX(1.6);\r\nfloorMesh.translateY(abstracts.particles.FLOOR_LEVEL);\r\nscene.add( floorMesh );\r\n\r\n\r\n// let farWallG = new THREE.BoxGeometry( 10000, 10000, 0.1);\r\n// let farWallM = new THREE.MeshStandardMaterial( { color: abstracts.themeMonoColor1 } );\r\n// let farWallMesh = new THREE.Mesh( farWallG, farWallM );\r\n// farWallMesh.translateZ(-500);\r\n// scene.add( farWallMesh );\r\n\r\nlet testOBJG = new THREE.BoxGeometry( -1, 1, 1);\r\nlet testOBJM = new THREE.MeshStandardMaterial( { color: abstracts.accentColor } );\r\nlet testOBJMesh = new THREE.Mesh( testOBJG, testOBJM );\r\ntestOBJMesh.translateX(-3);\r\ntestOBJMesh.translateY(0);\r\ntestOBJMesh.translateZ(0);\r\nscene.add( testOBJMesh );\r\n\r\n\r\n\r\n\r\n\r\n// Lights\r\nlet light = new THREE.HemisphereLight( abstracts.groudColor, abstracts.skyColor, 1 );\r\nlight.position.set( 50, 50, 50 );\r\nscene.add( light );\r\n\r\nlet pointLight = new THREE.PointLight(0xe5a665, 0.5, 1000, 2);\r\nlight.position.set( 0, 800, 0);\r\nscene.add( pointLight );\r\n\r\n// Camera\r\ncamera.position.z = cameraRadius;\r\n\r\n// Add scene to HTML\r\nsceneEl.appendChild( renderer.domElement );\r\n\r\nwindow.addEventListener( 'resize', function() {\r\n    let w = window.innerWidth,\r\n        h = window.innerHeight;\r\n    camera.aspect = w / h;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize( w, h );\r\n}, false );\r\n\r\n\r\nlet orbit = new Orbit(cameraRadius, camera);\r\n\r\nfunction render(dt) {\r\n    \r\n    particles.groupUpdate(dt);\r\n    renderer.render( scene, camera );\r\n}\r\n\r\n// Animate\r\nfunction animate() {\r\n    requestAnimationFrame( animate );\r\n    render(clock.getDelta());\r\n}\r\n\r\n\r\n\r\ninit();\r\nparticles.init();\r\nanimate();","console.log('test12');","// Allow the camera to orbit around\r\n\r\n// TODO add camera init position\r\n/*\r\n* radius - radius to orbit\r\n* camera - scene camera to move\r\n* loopPos - Position to lookAt\r\n\r\n* update - Run to continuously update the camera\r\n*/\r\nclass Orbit {\r\n    constructor(radius, camera, lookPos = new THREE.Vector3(0,0,0)) {\r\n        this.radius = radius;\r\n        this.camera = camera;\r\n        this.z = radius;\r\n        this.x = 0;\r\n        this.zUp = 0;\r\n        this.xUp = 1;\r\n        this.lookPos = lookPos;\r\n    }\r\n    \r\n\r\n    update() {\r\n        this.camera.translateZ(this.zUp / 80);\r\n        this.camera.translateX(this.xUp / 80);\r\n        this.camera.lookAt(this.lookPos);\r\n\r\n        if (this.zUp) {\r\n            this.z += 0.1;\r\n        } else {\r\n            this.z -= 0.1;\r\n        }\r\n\r\n        if (this.xUp) {\r\n            this.x += 0.1;\r\n        } else {\r\n            this.x -= 0.1;\r\n        }\r\n\r\n        if (this.x >= this.radius || this.x <= -this.radius) {\r\n            this.xUp != this.xUp\r\n        }\r\n\r\n        if (this.z >= this.radius || this.z <= -this.cameraRadius) {\r\n            this.zUp != this.zUp\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Orbit;","const abstracts = require('../abstracts'); \r\nconst GRASS_SIZE = 1;\r\n\r\n// Assets\r\nlet assets = {\r\n    grassBlade: \"/assets/images/textures/grass_blade.png\"\r\n}\r\n\r\n// Takes in the scene\r\nfunction initParticles(scene) {\r\n    initGrass(scene);\r\n}\r\n\r\nclass Particles {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.groups = [];\r\n        this.emitters = [];\r\n    }\r\n\r\n    init() {\r\n        this.initGrass();\r\n    }\r\n\r\n    initGrass() {\r\n        // Grass\r\n        const grassGroup = new SPE.Group({\r\n            texture: {\r\n                value: new THREE.TextureLoader().load(assets.grassBlade)\r\n            },\r\n            maxParticleCount: 50000,\r\n            hasPerspective: true,\r\n            colorize: true,\r\n            blending: THREE.NormalBlending,\r\n            // transparent: false,\r\n            // alphaTest: 5,\r\n            // depthWrite: 0,\r\n            // fog: 1,\r\n            // scale: 1\r\n        });\r\n    \r\n        const grassEmitter = new SPE.Emitter({\r\n            type: SPE.distributions.SPHERE,\r\n            particleCount: 10000,\r\n            isStatic: false,\r\n            maxAge: {\r\n                value: 10,\r\n                spread: 3\r\n            },\r\n            position: {\r\n                value: new THREE.Vector3(0, abstracts.particles.FLOOR_LEVEL - (GRASS_SIZE/2), -50),\r\n                radius: 1,\r\n                radiusScale: new THREE.Vector3(50, 0.001, 50),\r\n            },\r\n            wiggle: {\r\n                value: .0001,\r\n                spread: .001\r\n            },\r\n            color: {\r\n                value: new THREE.Color('green')\r\n            },\r\n            opacity: {\r\n                value: [0, 1, 1, 1, 1, 0]\r\n            },\r\n            size: {\r\n                value: GRASS_SIZE\r\n            },\r\n            angle: {\r\n                value: [0.2 , -1, 0.2],\r\n                spread: .5\r\n            }\r\n        });\r\n        \r\n        grassGroup.addEmitter(grassEmitter);\r\n        grassGroup.material.side = THREE.DoubleSide;\r\n\r\n        this.emitters.push(grassEmitter);\r\n        this.groups.push(grassGroup);\r\n        this.scene.add(grassGroup.mesh);\r\n    }\r\n\r\n    getGroups() {\r\n        return this.groups;\r\n    }\r\n\r\n    // @param dt - delta time\r\n    // This function should be used in a continuously updating loop.\r\n    groupUpdate(dt) {\r\n        this.groups.forEach((group) => {\r\n            group.tick(dt);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Particles;","import './components/background';\r\nimport './components/birds';\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}