{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/abstracts.js","src/js/components/grab-assets.js","src/js/components/vr-arm-item-selector.js","src/js/components/vr-arm-preview-icon.js","src/js/main.js","src/js/projects/vr-mechanism.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","\r\nconst abstracts = {\r\n\r\n    backgroundcolor: 0xfefefe,\r\n    accentColor: 0x5588ff,\r\n    skyColor: 0x87CEFA,\r\n    groudColor: 0x3CB371,\r\n    warmColor: 0xe5a665,\r\n\r\n    themeMonoColor1: 0xF6FAFB,\r\n    themeMonoColor2: 0xC3CACD,\r\n    themeMonoColor3: 0x97A1A4,\r\n    themeMonoColor4: 0x717C80,\r\n    themeMonoColor5: 0x49565A,\r\n    themeMonoColor6: 0x1F282C,\r\n\r\n    particles: {\r\n        FLOOR_LEVEL: -10\r\n    }\r\n}\r\n\r\nmodule.exports = abstracts;","// Must be placed on controller elements\r\nAFRAME.registerComponent('grab-assets', {\r\n    schema: {},\r\n    init: function() {\r\n        this.controller = this.el;\r\n\r\n        //this.el.\r\n\r\n        this.assetWorldPos = new THREE.Vector3();\r\n        this.currentAssetEl = undefined;              // The assets element\r\n        this.updateAsset = false;                   // Whether to continuously update the assets being grabbed\r\n\r\n        this.currentAssetRotation = new THREE.Vector3();\r\n\r\n        //this.icons = document.querySelectorAll('[preview-icon]')\r\n        \r\n        // When the controller tigger is pressed down\r\n        this.controller.addEventListener('triggerdown', (e) => {\r\n            console.log('trigger down');\r\n            // The controller can either be \"free\" or \"colliding\" as specified in the main.js file\r\n            // Colliding refers to colliding with a preview-icon\r\n            if (this.controller.is('colliding')) {\r\n                try {\r\n                    let previewIconEl = this.el.components['aabb-collider']['intersectedEls'][0];\r\n                    let assetData = previewIconEl.components['preview-icon'].data;\r\n                    \r\n                    this.createAsset(assetData.obj, assetData.mtl);\r\n                    \r\n                    //console.log(previewIconEl);\r\n                    //console.log(previewIconEl.components['preview-icon']);\r\n                    console.log('colliding');\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.controller.addEventListener('triggerup', (e) => {\r\n            if (this.controller.is('colliding')) {\r\n                console.log('colliding');\r\n            }\r\n            this.updateAsset = false;\r\n            console.log('trigger up');\r\n        });\r\n    },\r\n    update: function () {},\r\n    tick: function () {\r\n        if (this.updateAsset !== false && this.currentAssetEl !== undefined) {\r\n            let worldPos = this.calcWorldPos(this.el.object3D.matrixWorld);\r\n            this.currentAssetEl.setAttribute('position', `${worldPos.x} ${worldPos.y} ${worldPos.z}`);\r\n\r\n            // Rotation\r\n            //.applyQuaternion(this.el.object3D.getWorldQuaternion());\r\n            this.currentAssetEl.object3D.setRotationFromQuaternion(this.el.object3D.getWorldQuaternion());//setAttribute('rotation', `${this.currentAssetRotation.x} ${this.currentAssetRotation.y} ${this.currentAssetRotation.z}`);\r\n\r\n        } else {\r\n            //console.log('update', this.updateAsset, 'asset', this.currentAssetEl);\r\n            //console.log('asset', this.currentAsset);\r\n        }\r\n    },\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    createAsset(objUrl, mtlUrl) {\r\n        this.currentAssetEl = document.createElement('a-entity');\r\n        this.currentAssetEl.setAttribute('obj-model', {\r\n            obj: objUrl,\r\n            mtl: mtlUrl\r\n        });\r\n\r\n        this.currentAssetEl.setAttribute('scale', '0.01 0.01 0.01');\r\n\r\n        console.log('POSITION');\r\n\r\n        //this.calcWorldPos(this.el.object3D.matrixWorld);\r\n        //this.currentAssetEl.setAttribute('position', `${this.assetWorldPos.x} ${this.assetWorldPos.y} ${this.assetWorldPos.z}`);\r\n        \r\n        this.el.sceneEl.appendChild(this.currentAssetEl);\r\n\r\n        this.updateAsset = true;\r\n    },\r\n\r\n    calcWorldPos(elementMatrix) {\r\n        return this.assetWorldPos.setFromMatrixPosition(elementMatrix);\r\n    },\r\n\r\n\r\n  });","AFRAME.registerComponent('item-selector', {\r\n    schema: {\r\n        // size: {type: 'vec2', default: {x:0.5, y:0.2}}\r\n        // Contain a list of objects\r\n        // ex: {\r\n        //      name:    // Name of object\r\n        //      obj:     // 3D object location\r\n        //      preview: // Preview image location\r\n        // }\r\n        assetList: {type: 'string', default: \"[]\"}\r\n    },\r\n\r\n    init: function () {\r\n\r\n        console.log(this.data.assetList);\r\n\r\n        this.assetList = [];\r\n\r\n        // Display rectangle\r\n        let displayG = new THREE.BoxBufferGeometry(0.2, 0.01, 0.35);\r\n        let displayM = new THREE.MeshBasicMaterial({\r\n            color: 0xbbbbff,\r\n            side: 'double'\r\n        });\r\n        this.displayMesh = new THREE.Mesh(displayG, displayM);\r\n\r\n        this.el.setObject3D('mesh', this.displayMesh);\r\n        this.el.setAttribute('position', '-0.1 0.2 0.1');\r\n        this.el.setAttribute('rotation', '0 0 -75');\r\n\r\n\r\n        // Preview Icon Container\r\n        const ICON_HEIGHT = 0.05;\r\n        const ICON_WIDTH = 0.05;\r\n        this.ICON_OFFSET = 0.11;\r\n        this.ICON_MULTIPLYER = 0.08;\r\n\r\n        let previewIconContainerG = new THREE.BoxBufferGeometry(ICON_HEIGHT, 0.01, ICON_WIDTH);\r\n        let previewIconContainerM = new THREE.MeshBasicMaterial({\r\n            color: 0x999999,\r\n            side: 'double'\r\n        });\r\n        this.previewIconContainerMesh = new THREE.Mesh(displayG, displayM);\r\n    },\r\n    update: function () {\r\n\r\n        // Setup assertList\r\n        try {\r\n            this.assetList = JSON.parse(this.data.assetList);\r\n            this.updateAssetList(this.assetList);\r\n        } catch(e) {\r\n            throw new Error(e);\r\n        }\r\n    },\r\n    tick: function () {},\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    updateAssetList(newAssetList) {\r\n        // Remove all previous elements from the list\r\n        // if (this.currentAssetElements.length > 0) {\r\n        //     this.currentAssetElements.forEach((asset) => {\r\n        //         this.el.removeObject3D(asset.name. asset.mesh);\r\n        //     });\r\n        // }\r\n        console.log('hit1');\r\n        if (newAssetList.length > 0) {\r\n            newAssetList.forEach((asset, i) => {\r\n                console.log('Asset' , asset);\r\n                console.log('hit inside');\r\n                //this.el.setObject3D('icon_' + i, this.displayMesh);\r\n                let icon = document.createElement('a-entity');\r\n                \r\n                icon.setAttribute('preview-icon', `name: ${asset.name}; obj: ${asset.obj}; mtl: ${asset.mtl}; previewImage: ${asset.previewImage}`);\r\n                icon.setAttribute('position', `0 0.01 ${(-i*this.ICON_MULTIPLYER) + this.ICON_OFFSET}`);\r\n                this.el.appendChild(icon);\r\n                \r\n                console.log('Element Created');\r\n            });\r\n        }\r\n        \r\n        //this.el.setObject3D('icon_1', this.displayMesh);\r\n        //this.el.setAttribute('position', '-0.2 0 0.1');\r\n    }\r\n  });","AFRAME.registerComponent('preview-icon', {\r\n    schema: {\r\n        name: {type: \"string\", default: \"temp\"},\r\n        previewImage: {type: \"string\", 'default': ''},\r\n        obj: {type: \"string\", default: ''},\r\n        mtl: {type: \"string\", default: ''},\r\n        collisionObjs: {type: \"array\", default: []}\r\n    },\r\n\r\n    init: function () {\r\n        const ICON_HEIGHT = 0.05;\r\n        const ICON_WIDTH = 0.05;\r\n\r\n        // Preview Icons\r\n        this.assetElementsMap = [];\r\n        let startPos = this.el.getAttribute('position');\r\n\r\n        this.previewObj = null;\r\n\r\n        let previewIconG = new THREE.BoxBufferGeometry(ICON_HEIGHT, 0.01, ICON_WIDTH);\r\n        let previewIconM = new THREE.MeshBasicMaterial({\r\n            color: 0xeeeeee,\r\n            side: 'double'\r\n        });\r\n\r\n        let image = this.getImage();\r\n        if (image !== null) {\r\n            previewIconM.map = image;\r\n        }\r\n\r\n        this.previewIconMesh = new THREE.Mesh(previewIconG, previewIconM);\r\n        // Aligns Picture Icon in the correct orientation\r\n        this.previewIconMesh.rotateY(Math.PI/2);\r\n        this.el.setObject3D('mesh', this.previewIconMesh);\r\n\r\n\r\n        // Pressing Animations\r\n        let animationDown = document.createElement('a-animation');\r\n        animationDown.setAttribute('attribute', \"position\");\r\n        animationDown.setAttribute('dur', \"100\");\r\n        animationDown.setAttribute('to', `${startPos.x} ${startPos.y + -0.005} ${startPos.z}`);\r\n        animationDown.setAttribute('begin', \"down\");\r\n        this.el.appendChild(animationDown);\r\n\r\n        let animationUp = document.createElement('a-animation');\r\n        animationUp.setAttribute('attribute', \"position\");\r\n        animationUp.setAttribute('dur', \"100\");\r\n        animationUp.setAttribute('to', `${startPos.x} ${startPos.y} ${startPos.z}`);\r\n        animationUp.setAttribute('begin', \"up\");\r\n        this.el.appendChild(animationUp);\r\n\r\n        this.el.flushToDOM();\r\n\r\n        // Check if preview obj is present\r\n        if (this.data.obj !== '' && this.data.mtl !== '') {\r\n\r\n            // Create preview Obj\r\n            this.previewObj = document.createElement('a-entity');\r\n            this.previewObj.setAttribute('obj-model', {\r\n                obj: this.data.obj,\r\n                mtl: this.data.mtl\r\n            });\r\n\r\n            this.previewObj.setAttribute('scale', '0.01 0.01 0.01');\r\n            this.previewObj.setAttribute('position', '-0.12 0 0');\r\n            this.previewObj.setAttribute('rotation', '-90 0 90');\r\n            // this.previewObj.setAttribute('material', 'visible: false');\r\n\r\n            this.previewObj.flushToDOM();\r\n        } else {\r\n            console.warn(`Data obj not found on`, this.el);\r\n        }\r\n\r\n        this.el.flushToDOM();\r\n        //this.el.setAttribute('position', '-0.2 0.1 0.1');\r\n    \r\n\r\n        // Sets aframe extra's sphere collider onto icon\r\n        //this.el.setAttribute('class', \"preview-icon\");\r\n        this.el.setAttribute('aabb-collider', 'objects: [hand-controls]');\r\n        \r\n        this.el.addEventListener('hitstart', (e) => {\r\n            console.log(\"HIT HAS HAPPENED\");\r\n            this.el.emit('down');\r\n            this.addPreviewObj();\r\n        });\r\n\r\n        this.el.addEventListener('hitend', (e) => {\r\n            console.log(\"HIT END HAS HAPPENED\");\r\n            this.el.emit('up');\r\n            this.removePreviewObj();\r\n        });\r\n\r\n                \r\n                \r\n                //previewObj.material.wireframe = true;\r\n                console.log('ICON', this.el); \r\n    },\r\n    update: function () {},\r\n    tick: function () {},\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    getImage() {\r\n        let previewImage = this.data.previewImage;\r\n        if (previewImage !== 'undefined' && previewImage !== undefined) {\r\n            try {\r\n                let image = THREE.ImageUtils.loadTexture(previewImage);\r\n                return image;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    addPreviewObj() {\r\n        if (this.previewObj) {\r\n            this.el.appendChild(this.previewObj);\r\n        }\r\n    },\r\n\r\n    removePreviewObj() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            this.el.removeChild(preObj);\r\n        } else {\r\n            console.log('No preview object to remove');\r\n        }\r\n    },\r\n\r\n    previewObjVisible() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            preObj.setAttribute('material', 'visible: true');\r\n        } else {\r\n            console.log('No preview object found');\r\n        }\r\n    },\r\n\r\n    hidePreviewObj() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            preObj.setAttribute('material', 'visible: false');\r\n        } else {\r\n            console.log('No preview object found');\r\n        }\r\n    }\r\n  });","//import './components/background';\r\n//import './components/birds';\r\n\r\n//import './components/vr-background-nav';\r\n\r\nimport './projects/vr-mechanism';\r\nimport './components/vr-arm-item-selector';\r\nimport './components/vr-arm-preview-icon';\r\nimport './components/grab-assets';\r\n\r\nconst abstracts = require('./abstracts');","\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ci1tZWNoYW5pc20uanMiLCJzb3VyY2VzQ29udGVudCI6W119"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}