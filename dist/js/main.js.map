{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/abstracts.js","src/js/components/background.js","src/js/components/birds.js","src/js/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","\r\nconst abstracts = {\r\n\r\n    backgroundcolor: 0xfefefe,\r\n    accentColor: 0x5588ff,\r\n\r\n    themeMonoColor1: 0xF6FAFB,\r\n    themeMonoColor2: 0xC3CACD,\r\n    themeMonoColor3: 0x97A1A4,\r\n    themeMonoColor4: 0x717C80,\r\n    themeMonoColor5: 0x49565A,\r\n    themeMonoColor6: 0x1F282C\r\n}\r\n\r\nmodule.exports = abstracts;","const abstracts = require('../abstracts');\r\n\r\n\r\nlet sceneEl = document.getElementById('scene');\r\n\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n// Default Vectors\r\n\r\n// Position based on field\r\nlet posMiddle = new THREE.Vector3(500, 0, 500);\r\n\r\n// Rotation\r\n\r\n\r\n// Objects\r\n\r\n\r\n\r\n// Floor Texture\r\n\r\nlet floorEmitter = new SPE.Emitter({\r\n    type: SPE.distributions.SPHERE,\r\n    particleCount: 10000,\r\n    isStatic: true,\r\n    maxAge: {\r\n        value: 8,\r\n        spread: 3\r\n    },\r\n    position: {\r\n        value: new THREE.Vector3(0,0,0),\r\n        radius: 10\r\n    },\r\n    wiggle: {\r\n        value: 1,\r\n        spread: 0.1\r\n    },\r\n    color: {\r\n        //value: new THREE.Color(abstracts.themeMonoColor4)\r\n    },\r\n    size: {\r\n        value: 1\r\n    },\r\n    angle: {\r\n        value: .1,\r\n        spread: .2\r\n    }\r\n});\r\n\r\nlet floorGroup = new SPE.Group({\r\n\ttexture: {\r\n        value: new THREE.TextureLoader().load( \"/assets/images/textures/grass_blade.png\")\r\n    },\r\n    maxParticleCount: 10000,\r\n    hasPerspective: false,\r\n    colorize: false,\r\n    blending: THREE.AdditiveBlending,\r\n    transparent: false,\r\n    alphaTest: 5,\r\n    depthWrite: 0,\r\n    fog: 1,\r\n    scale: 1\r\n});\r\n\r\nfloorGroup.addEmitter(floorEmitter);\r\n\r\nscene.add(floorGroup.mesh);\r\n\r\n// Floor\r\nlet floorG = new THREE.BoxGeometry( 1000, 0.1, 1000 );\r\nlet floorM = new THREE.MeshStandardMaterial( { \r\n    color: abstracts.themeMonoColor1,\r\n    side: THREE.DoubleSide\r\n});\r\n\r\n// let floorMesh = new THREE.Mesh( floorG, floorM );\r\n// floorMesh.translateY(-10);\r\n// scene.add( floorMesh );\r\n\r\n\r\n// let farWallG = new THREE.BoxGeometry( 10000, 10000, 0.1);\r\n// let farWallM = new THREE.MeshStandardMaterial( { color: abstracts.themeMonoColor1 } );\r\n// let farWallMesh = new THREE.Mesh( farWallG, farWallM );\r\n// farWallMesh.translateZ(-500);\r\n// scene.add( farWallMesh );\r\n\r\nlet testOBJG = new THREE.BoxGeometry( 1, 1, 1);\r\nlet testOBJM = new THREE.MeshStandardMaterial( { color: abstracts.accentColor } );\r\nlet testOBJMesh = new THREE.Mesh( testOBJG, testOBJM );\r\nscene.add( testOBJMesh );\r\n\r\n\r\n\r\n\r\n\r\n// Lights\r\nlet light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 6 );\r\nscene.add( light );\r\n\r\n// Camera\r\ncamera.position.z = 5;\r\n\r\nsceneEl.appendChild( renderer.domElement );\r\n\r\n\r\n// Updates all partical group\r\n// Put this function inside the update method\r\nfunction particleGroupUpdate( deltaTime ) {\r\n    floorGroup.tick( deltaTime );\r\n}\r\n\r\n// Animate\r\nfunction animate(deltaTime) {\r\n\r\n    if (deltaTime) {\r\n        particleGroupUpdate(deltaTime);\r\n    }\r\n\r\n    //test\r\n    //camera.rotateY(.01);\r\n    //camera.rotateX(.01);\r\n    //floorMesh.rotateX(.1);\r\n\trequestAnimationFrame( animate );\r\n\trenderer.render( scene, camera );\r\n}\r\nanimate();","console.log('test12');","import './components/background';\r\nimport './components/birds';\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}