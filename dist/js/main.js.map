{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/abstracts.js","src/js/components/grab-assets.js","src/js/components/vr-arm-item-selector.js","src/js/components/vr-arm-preview-icon.js","src/js/components/vr-eraser-toggle.js","src/js/components/vr-eraser.js","src/js/main.js","src/js/projects/vr-mechanism.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","\r\nconst abstracts = {\r\n\r\n    backgroundcolor: 0xfefefe,\r\n    accentColor: 0x5588ff,\r\n    skyColor: 0x87CEFA,\r\n    groudColor: 0x3CB371,\r\n    warmColor: 0xe5a665,\r\n\r\n    themeMonoColor1: 0xF6FAFB,\r\n    themeMonoColor2: 0xC3CACD,\r\n    themeMonoColor3: 0x97A1A4,\r\n    themeMonoColor4: 0x717C80,\r\n    themeMonoColor5: 0x49565A,\r\n    themeMonoColor6: 0x1F282C,\r\n\r\n    particles: {\r\n        FLOOR_LEVEL: -10\r\n    }\r\n}\r\n\r\nmodule.exports = abstracts;","// Must be placed on controller elements\r\nAFRAME.registerComponent('grab-assets', {\r\n    schema: {},\r\n    init: function() {\r\n        this.controller = this.el;\r\n\r\n        //this.el.\r\n\r\n        this.assetWorldPos = new THREE.Vector3();\r\n        this.currentAssetEl = undefined;              // The assets element\r\n        this.updateAsset = false;                   // Whether to continuously update the assets being grabbed\r\n\r\n        //this.currentAssetQuaternion = new THREE.Quaternion();\r\n        this.secondaryCtrlQuanternion = new THREE.Quaternion();\r\n        this.startingAssetQuanternion = new THREE.Quaternion();\r\n        this.startingCtrlQuanternion = new THREE.Quaternion();\r\n        this.deltaCtrlQuanternion = new THREE.Quaternion();\r\n        this.finalAssetQuanternion = new THREE.Quaternion();\r\n        //this.icons = document.querySelectorAll('[preview-icon]')\r\n        \r\n        // When the controller tigger is pressed down\r\n        this.controller.addEventListener('triggerdown', (e) => {\r\n            console.log('trigger down');\r\n            // The controller can either be \"free\" or \"colliding\" as specified in the main.js file\r\n            // Colliding refers to colliding with a preview-icon\r\n            if (this.controller.is('colliding')) {\r\n                try {\r\n                    let assetEl = this.el.components['aabb-collider']['intersectedEls'][0];\r\n                    let assetData = undefined; \r\n                    if (assetEl) {\r\n                        if (assetEl.components['preview-icon']) {\r\n                            // Preview Icon Click\r\n                            assetData = assetEl.components['preview-icon'].data;\r\n                            this.createAsset(assetData.obj, assetData.mtl);\r\n                        } else if (assetEl.components['obj-model']) {\r\n                            // Object Model Clicked\r\n                            this.updateExistingAsset(assetEl);\r\n                        } else if (assetEl.components['vr-eraser-toggle']) {\r\n                            console.log(\"vr-eraser toggle\");\r\n                            assetEl.emit('click', {el: this.el});\r\n                        }\r\n                    }\r\n                    console.log('colliding');\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.controller.addEventListener('triggerup', (e) => {\r\n            if (this.controller.is('colliding')) {\r\n                console.log('colliding');\r\n            }\r\n            this.updateAsset = false;\r\n            console.log('trigger up');\r\n        });\r\n    },\r\n    update: function () {},\r\n    tick: function () {\r\n        if (this.updateAsset !== false && this.currentAssetEl !== undefined) {\r\n            let worldPos = this.calcWorldPos(this.el.object3D.matrixWorld);\r\n            this.currentAssetEl.setAttribute('position', `${worldPos.x} ${worldPos.y} ${worldPos.z}`);\r\n            \r\n            this.secondaryCtrlQuanternion.copy(this.el.object3D.getWorldQuaternion());\r\n            this.secondaryCtrlQuanternion.normalize();\r\n            //this.startingAssetQuanternion(\r\n            //this.deltaCtrlQuanternion.inverse();\r\n\r\n            this.deltaCtrlQuanternion.multiplyQuaternions(this.secondaryCtrlQuanternion, this.startingCtrlQuanternion);\r\n            this.finalAssetQuanternion.multiplyQuaternions(this.deltaCtrlQuanternion, this.startingAssetQuanternion);\r\n            \r\n            //console.log(this.currentAssetQuaternion);\r\n            //this.currentAssetQuaternion.multiply(this.el.object3D.getWorldQuaternion());\r\n            // Rotation\r\n            //.applyQuaternion(this.el.object3D.getWorldQuaternion());\r\n            this.currentAssetEl.object3D.setRotationFromQuaternion(this.finalAssetQuanternion);\r\n            //this.currentAssetEl.object3D.setRotationFromQuaternion(this.el.object3D.getWorldQuaternion());\r\n\r\n        } else {\r\n            //console.log('update', this.updateAsset, 'asset', this.currentAssetEl);\r\n            //console.log('asset', this.currentAsset);\r\n        }\r\n    },\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    createAsset(objUrl, mtlUrl) {\r\n        this.currentAssetEl = document.createElement('a-entity');\r\n        this.currentAssetEl.setAttribute('obj-model', {\r\n            obj: objUrl,\r\n            mtl: mtlUrl\r\n        });\r\n\r\n        this.currentAssetEl.setAttribute('scale', '0.01 0.01 0.01');\r\n        this.currentAssetEl.setAttribute('class', 'collides');\r\n\r\n        console.log('POSITION');\r\n\r\n        //this.calcWorldPos(this.el.object3D.matrixWorld);\r\n        //this.currentAssetEl.setAttribute('position', `${this.assetWorldPos.x} ${this.assetWorldPos.y} ${this.assetWorldPos.z}`);\r\n        \r\n        //this.currentAssetQuaternion.copy(this.currentAssetEl.object3D.getWorldQuaternion());\r\n        this.startingAssetQuanternion.copy(this.currentAssetEl.object3D.getWorldQuaternion());\r\n        this.startingAssetQuanternion.normalize();\r\n\r\n        this.startingCtrlQuanternion.copy(this.el.object3D.getWorldQuaternion());\r\n        this.startingCtrlQuanternion.inverse();\r\n        //this.startingCtrlQuanternion.normalize();\r\n\r\n        this.el.sceneEl.appendChild(this.currentAssetEl);\r\n        this.currentAssetEl.flushToDOM();\r\n        this.updateAsset = true;\r\n    },\r\n\r\n    updateExistingAsset(assetEl) {\r\n\r\n        this.currentAssetEl = assetEl;\r\n\r\n        this.startingAssetQuanternion.copy(this.currentAssetEl.object3D.getWorldQuaternion());\r\n        this.startingAssetQuanternion.normalize();\r\n\r\n        this.startingCtrlQuanternion.copy(this.el.object3D.getWorldQuaternion());\r\n        this.startingCtrlQuanternion.inverse();\r\n        //this.startingCtrlQuanternion.normalize();\r\n\r\n        //this.currentAssetEl.object3D.setRotationFromQuaternion(this.startingAssetQuanternion);\r\n        this.updateAsset = true;\r\n    },\r\n\r\n    calcWorldPos(elementMatrix) {\r\n        return this.assetWorldPos.setFromMatrixPosition(elementMatrix);\r\n    },\r\n\r\n\r\n  });","AFRAME.registerComponent('item-selector', {\r\n    schema: {\r\n        // size: {type: 'vec2', default: {x:0.5, y:0.2}}\r\n        // Contain a list of objects\r\n        // ex: {\r\n        //      name:    // Name of object\r\n        //      obj:     // 3D object location\r\n        //      preview: // Preview image location\r\n        // }\r\n        assetList: {type: 'string', default: \"[]\"}\r\n    },\r\n\r\n    init: function () {\r\n\r\n        console.log(this.data.assetList);\r\n\r\n        this.assetList = [];\r\n\r\n        // Display rectangle\r\n        let displayG = new THREE.BoxBufferGeometry(0.3, 0.01, 0.5);\r\n        let displayM = new THREE.MeshBasicMaterial({\r\n            color: 0xbbbbff,\r\n            side: 'double'\r\n        });\r\n        this.displayMesh = new THREE.Mesh(displayG, displayM);\r\n\r\n        this.el.setObject3D('mesh', this.displayMesh);\r\n        this.el.setAttribute('position', '-0.1 0.3 0.1');\r\n        this.el.setAttribute('rotation', '0 0 -75');\r\n\r\n        // Add Labels\r\n        let assetText = document.createElement('a-text');\r\n        assetText.setAttribute('value', 'Assets');\r\n        assetText.setAttribute('rotation', '-90 90 0');\r\n        assetText.setAttribute('scale', '0.1 0.1 0.1');\r\n        assetText.setAttribute('position', '-0.11 0.01 0.24');\r\n        assetText.setAttribute('color', '#010101');\r\n\r\n        this.el.appendChild(assetText);\r\n\r\n        let toolsText = document.createElement('a-text');\r\n        toolsText.setAttribute('rotation', '-90 90 0');\r\n        toolsText.setAttribute('scale', '0.1 0.1 0.1');\r\n        toolsText.setAttribute('position', '0.03 0.01 0.24');\r\n        toolsText.setAttribute('color', '#010101');\r\n        toolsText.setAttribute('value', 'Tools');\r\n        this.el.appendChild(toolsText);\r\n        \r\n        // Add Tools\r\n        // Adding Remover Tool\r\n        let removerTool = document.createElement('a-entity');\r\n        removerTool.setAttribute('vr-eraser-toggle', \"\");\r\n        removerTool.setAttribute('position', \"0.08 0.01 0.21\");\r\n        this.el.appendChild(removerTool);\r\n\r\n\r\n        // Preview Icon Container\r\n        const ICON_HEIGHT = 0.05;\r\n        const ICON_WIDTH = 0.05;\r\n        this.ICON_OFFSET = 0.21;\r\n        this.ICON_MULTIPLYER = 0.08;\r\n\r\n        let previewIconContainerG = new THREE.BoxBufferGeometry(ICON_HEIGHT, 0.01, ICON_WIDTH);\r\n        let previewIconContainerM = new THREE.MeshBasicMaterial({\r\n            color: 0x999999,\r\n            side: 'double'\r\n        });\r\n        this.previewIconContainerMesh = new THREE.Mesh(displayG, displayM);\r\n    },\r\n    update: function () {\r\n\r\n        // Setup assertList\r\n        try {\r\n            this.assetList = JSON.parse(this.data.assetList);\r\n            this.updateAssetList(this.assetList);\r\n        } catch(e) {\r\n            throw new Error(e);\r\n        }\r\n    },\r\n    tick: function () {},\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    updateAssetList(newAssetList) {\r\n        // TODO: Remove all previous elements from the list\r\n        // if (this.currentAssetElements.length > 0) {\r\n        //     this.currentAssetElements.forEach((asset) => {\r\n        //         this.el.removeObject3D(asset.name. asset.mesh);\r\n        //     });\r\n        // }\r\n        console.log('hit1');\r\n        if (newAssetList.length > 0) {\r\n            newAssetList.forEach((asset, i) => {\r\n                console.log('Asset' , asset);\r\n                console.log('hit inside');\r\n                //this.el.setObject3D('icon_' + i, this.displayMesh);\r\n                let icon = document.createElement('a-entity');\r\n                \r\n                icon.setAttribute('preview-icon', `name: ${asset.name}; obj: ${asset.obj}; mtl: ${asset.mtl}; previewImage: ${asset.previewImage}`);\r\n                icon.setAttribute('position', `-0.045 0.01 ${(-i*this.ICON_MULTIPLYER) + this.ICON_OFFSET}`);\r\n                this.el.appendChild(icon);\r\n                \r\n                console.log('Element Created');\r\n            });\r\n        }\r\n        \r\n        //this.el.setObject3D('icon_1', this.displayMesh);\r\n        //this.el.setAttribute('position', '-0.2 0 0.1');\r\n    }\r\n  });","AFRAME.registerComponent('preview-icon', {\r\n    schema: {\r\n        name: {type: \"string\", default: \"temp\"},\r\n        previewImage: {type: \"string\", 'default': ''},\r\n        obj: {type: \"string\", default: ''},\r\n        mtl: {type: \"string\", default: ''},\r\n        collisionObjs: {type: \"array\", default: []}\r\n    },\r\n\r\n    init: function () {\r\n        const ICON_HEIGHT = 0.05;\r\n        const ICON_WIDTH = 0.05;\r\n\r\n        // Preview Icons\r\n        this.assetElementsMap = [];\r\n        let startPos = this.el.getAttribute('position');\r\n\r\n        this.previewObj = null;\r\n\r\n        let previewIconG = new THREE.BoxBufferGeometry(ICON_HEIGHT, 0.01, ICON_WIDTH);\r\n        let previewIconM = new THREE.MeshBasicMaterial({\r\n            color: 0xeeeeee,\r\n            side: 'double'\r\n        });\r\n\r\n        // Adds image to icon(button) if present\r\n        let image = this.getImage();\r\n        if (image !== null) {\r\n            previewIconM.map = image;\r\n        }\r\n\r\n        this.previewIconMesh = new THREE.Mesh(previewIconG, previewIconM);\r\n        // Aligns Picture Icon in the correct orientation\r\n        this.previewIconMesh.rotateY(Math.PI/2);\r\n        this.el.setObject3D('mesh', this.previewIconMesh);\r\n\r\n\r\n        // Pressing Animations\r\n        let animationDown = document.createElement('a-animation');\r\n        animationDown.setAttribute('attribute', \"position\");\r\n        animationDown.setAttribute('dur', \"100\");\r\n        animationDown.setAttribute('to', `${startPos.x} ${startPos.y + -0.005} ${startPos.z}`);\r\n        animationDown.setAttribute('begin', \"down\");\r\n        this.el.appendChild(animationDown);\r\n\r\n        let animationUp = document.createElement('a-animation');\r\n        animationUp.setAttribute('attribute', \"position\");\r\n        animationUp.setAttribute('dur', \"100\");\r\n        animationUp.setAttribute('to', `${startPos.x} ${startPos.y} ${startPos.z}`);\r\n        animationUp.setAttribute('begin', \"up\");\r\n        this.el.appendChild(animationUp);\r\n\r\n        this.el.flushToDOM();\r\n\r\n        // Check if preview obj is present\r\n        if (this.data.obj !== '' && this.data.mtl !== '') {\r\n\r\n            // Create preview Obj\r\n            this.previewObj = document.createElement('a-entity');\r\n            this.previewObj.setAttribute('obj-model', {\r\n                obj: this.data.obj,\r\n                mtl: this.data.mtl\r\n            });\r\n\r\n            this.previewObj.setAttribute('scale', '0.01 0.01 0.01');\r\n            this.previewObj.setAttribute('position', '-0.12 0 0');\r\n            this.previewObj.setAttribute('rotation', '-90 0 90');\r\n            // this.previewObj.setAttribute('material', 'visible: false');\r\n\r\n            this.previewObj.flushToDOM();\r\n        } else {\r\n            console.warn(`Data obj not found on`, this.el);\r\n        }\r\n\r\n        //this.el.flushToDOM();\r\n        //this.el.setAttribute('position', '-0.2 0.1 0.1');\r\n    \r\n\r\n        // Sets aframe extra's sphere collider onto icon\r\n        //this.el.setAttribute('class', \"preview-icon\");\r\n        this.el.setAttribute('aabb-collider', 'objects: [hand-controls]');\r\n        this.el.setAttribute('class', 'collides');\r\n        \r\n        this.el.addEventListener('hitstart', (e) => {\r\n            console.log(\"HIT HAS HAPPENED\");\r\n            this.el.emit('down');\r\n            this.addPreviewObj();\r\n        });\r\n\r\n        this.el.addEventListener('hitend', (e) => {\r\n            console.log(\"HIT END HAS HAPPENED\");\r\n            this.el.emit('up');\r\n            this.removePreviewObj();\r\n        });\r\n\r\n                \r\n                \r\n                //previewObj.material.wireframe = true;\r\n                console.log('ICON', this.el); \r\n    },\r\n    update: function () {},\r\n    tick: function () {},\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    getImage() {\r\n        let previewImage = this.data.previewImage;\r\n        if (previewImage !== 'undefined' && previewImage !== undefined) {\r\n            try {\r\n                let image = THREE.ImageUtils.loadTexture(previewImage);\r\n                return image;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    addPreviewObj() {\r\n        if (this.previewObj) {\r\n            this.el.appendChild(this.previewObj);\r\n        }\r\n    },\r\n\r\n    removePreviewObj() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            this.el.removeChild(preObj);\r\n        } else {\r\n            console.log('No preview object to remove');\r\n        }\r\n    },\r\n\r\n    previewObjVisible() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            preObj.setAttribute('material', 'visible: true');\r\n        } else {\r\n            console.log('No preview object found');\r\n        }\r\n    },\r\n\r\n    hidePreviewObj() {\r\n        let preObj = this.el.querySelector('a-entity[obj-model]');\r\n        if (preObj) {\r\n            preObj.setAttribute('material', 'visible: false');\r\n        } else {\r\n            console.log('No preview object found');\r\n        }\r\n    }\r\n  });","AFRAME.registerComponent('vr-eraser-toggle', {\r\n    // This is a controller tool. Must be placed on the controller element.\r\n    schema: {},\r\n\r\n    init: function () {\r\n        // Variables\r\n        this.eraserActive = false;\r\n\r\n        // Eraser Tool Rectangle\r\n        let etGeo = new THREE.BoxBufferGeometry(0.025, 0.01, 0.05);\r\n        let etMat = new THREE.MeshBasicMaterial({\r\n            color: '#e8a5a0'\r\n        });\r\n        this.etMesh = new THREE.Mesh(etGeo, etMat);\r\n        \r\n        // Placeholder for the Eraser\r\n        let pGeo = new THREE.BoxBufferGeometry(0.025, 0.001, 0.05);\r\n        let pMat = new THREE.MeshBasicMaterial({\r\n            color: '#C5344A',\r\n            wireframe: true\r\n        });\r\n        this.pMesh = new THREE.Mesh(pGeo, pMat);\r\n\r\n        this.el.setObject3D('et', this.etMesh);\r\n        // Must be called 'mesh' in order for aabb colider to work\r\n        this.el.setObject3D('mesh', this.pMesh);\r\n\r\n\r\n        // Text\r\n        // Todo: A tool UI component should be created that has the option of text instead of creating tool specific text and icons here.\r\n        let eraserText = document.createElement('a-text');\r\n        eraserText.setAttribute('value', 'Eraser');\r\n        eraserText.setAttribute('rotation', '-90 90 0');\r\n        eraserText.setAttribute('scale', '0.05 0.05 0.05');\r\n        eraserText.setAttribute('position', '0.03 0 0.02');\r\n        eraserText.setAttribute('color', '#010101');\r\n        this.el.appendChild(eraserText);\r\n\r\n\r\n        this.el.flushToDOM();\r\n\r\n        // Set collider\r\n        this.el.setAttribute('aabb-collider', 'objects: [hand-controls]');\r\n        this.el.setAttribute('class', 'collides');\r\n        this.el.flushToDOM();\r\n\r\n        // Event Listeners\r\n        this.el.addEventListener('click', (e) => {\r\n            let targetEl = e.detail.el;\r\n            console.log('targetEl');\r\n            console.log(targetEl);\r\n            if (this.eraserActive) {\r\n                this.removeEraser(targetEl);\r\n                this.eraserActive = false;\r\n                console.log(\"Remove Eraser\");\r\n            } else {\r\n                this.attachEraser(targetEl);\r\n                this.eraserActive = true;\r\n                console.log(\"Add Eraser\")\r\n            }\r\n        });\r\n    },\r\n    update: function () {},\r\n    tick: function () {},\r\n    remove: function () {},\r\n    pause: function () {},\r\n    play: function () {},\r\n\r\n    attachEraser(controllerEl) {\r\n        if (controllerEl) {\r\n            controllerEl.setAttribute('vr-eraser', \"\");\r\n            this.el.removeObject3D('et');\r\n        }\r\n    },\r\n    \r\n\r\n    removeEraser(controllerEl) {\r\n        if (controllerEl) {\r\n            controllerEl.removeAttribute('vr-eraser');\r\n            this.el.setObject3D('et', this.etMesh);\r\n        }\r\n    },\r\n  });","AFRAME.registerComponent('vr-eraser', {\r\n    // This is a controller tool. Must be placed on the controller element.\r\n    schema: {},\r\n\r\n    init: function () {\r\n        this.controller = this.el;\r\n\r\n\r\n        // Variables\r\n        this.eraserHover = false;\r\n        this.previousAssetHit = undefined;                          // Tracks the previous asset the eraser was in contact with\r\n\r\n\r\n        // Set Eraser\r\n        let eraserGeo = new THREE.CubeGeometry(0.05, 0.1, 0.02);\r\n        let eraserMat = new THREE.MeshBasicMaterial({\r\n            color: '#e8a5a0'\r\n        });\r\n\r\n        this.eraserMesh = new THREE.Mesh(eraserGeo, eraserMat);\r\n        this.eraserMesh.translateZ(-0.1);\r\n        this.eraserMesh.rotateX(Math.PI/2);\r\n        this.el.setObject3D('eraser', this.eraserMesh);\r\n        this.el.setAttribute('aabb-collider', 'objects: .collides');\r\n\r\n\r\n        // Deletion Detection Box\r\n        let ddBoxGeo = new THREE.CubeGeometry(25, 25, 25);\r\n        let ddBoxMat = new THREE.MeshBasicMaterial({\r\n            color: '#ff0000',\r\n            wireframe: true\r\n        });\r\n\r\n        this.ddBoxMesh = new THREE.Mesh(ddBoxGeo, ddBoxMat);\r\n\r\n\r\n        this.el.flushToDOM();\r\n\r\n        this.events = { \r\n            hitstart: ((e) => {\r\n\r\n                let assetEl = this.el.components['aabb-collider']['intersectedEls'][0];\r\n    \r\n                // Create a bounding box if the element is an object model\r\n                if (assetEl) {\r\n                    if (assetEl.components['obj-model']) {\r\n                        // Object Model Clicked\r\n                        //let boundingBox = new THREE.BoundingBoxHelper(assetEl.getObject3D('mesh'), 0xff0000);\r\n                        //this.el.sceneEl.add(boundingBox);\r\n                        assetEl.setObject3D('ddBox', this.ddBoxMesh);\r\n                        this.previousAssetHit = assetEl;\r\n                    }\r\n                }\r\n                \r\n    \r\n                console.log(\"Eraser HIT\");\r\n                this.eraserHover = true;\r\n                this.eraserMesh.material.color.setHex(0xFF0000);\r\n            }),\r\n            hitend: ((e) => {\r\n\r\n                // Remove a bounding box if the element is an object model\r\n                if (this.previousAssetHit) {\r\n                    this.previousAssetHit.removeObject3D('ddBox');\r\n                    this.previousAssetHit = undefined;\r\n                }\r\n    \r\n                console.log(\"Eraser END\");\r\n                this.eraserHover = false;\r\n                this.eraserMesh.material.color.setHex(0xCC6666);\r\n            }),\r\n            triggerdown: ((e) => {\r\n                console.log('trigger down');\r\n                // The controller can either be \"free\" or \"colliding\" as specified in the main.js file\r\n                // Colliding refers to colliding with a preview-icon\r\n                if (this.controller.is('colliding')) {\r\n                    try {\r\n                        let assetEl = this.el.components['aabb-collider']['intersectedEls'][0];\r\n                        let assetData = undefined; \r\n                        if (assetEl) {\r\n                            if (assetEl.components['obj-model']) {\r\n                                assetEl.parentNode.removeChild(assetEl);\r\n                            }\r\n                        }\r\n                        console.log('colliding');\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        this.el.addEventListener('hitstart', this.events.hitstart);\r\n        this.el.addEventListener('hitend', this.events.hitend);\r\n        this.el.addEventListener('triggerdown', this.events.triggerdown);\r\n        \r\n    },\r\n    update: function () {},\r\n    tick: function () {},\r\n    remove: function () {\r\n        this.el.removeEventListener('hitstart', this.events.hitstart);\r\n        this.el.removeEventListener('hitend', this.events.hitend);\r\n        this.el.removeEventListener('triggerdown', this.events.triggerdown);\r\n\r\n        this.el.removeObject3D('eraser');\r\n    },\r\n    pause: function () {},\r\n    play: function () {},\r\n  });","//import './components/background';\r\n//import './components/birds';\r\n\r\n//import './components/vr-background-nav';\r\n\r\nimport './projects/vr-mechanism';\r\nimport './components/vr-arm-item-selector';\r\nimport './components/vr-arm-preview-icon';\r\nimport './components/grab-assets';\r\nimport './components/vr-eraser';\r\nimport './components/vr-eraser-toggle';\r\n\r\nconst abstracts = require('./abstracts');","\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ci1tZWNoYW5pc20uanMiLCJzb3VyY2VzQ29udGVudCI6W119"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}